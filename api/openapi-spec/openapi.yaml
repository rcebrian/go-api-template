openapi: 3.0.3
info:
  description: Basic API template
  version: 1.0.0
  title: Basic API
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://localhost:8080'
    description: localhost
tags:
  - name: system
    description: System health operations
  - name: users
    description: Users use cases
paths:
  /health:
    get:
      tags:
        - system
      operationId: getHealth
      summary: Health check
      description: Checks the API itself and all critical dependencies (available under the port 8079 or HTTP_HEALTH_PORT  environment variable). For internal purposes
      x-internal: true
      responses:
        '200':
          description: OK
  /users:
    get:
      tags:
        - users
      operationId: getAllUsers
      summary: Get all users
      description: Retrieve all users from data storage
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create user
      operationId: createUser
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      description: Save user into data storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      tags:
        - users
  '/users/{userId}':
    get:
      summary: Get user by id
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: getUserById
      description: Retrieve user information from ID
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
        description: Numeric ID of the user to get
components:
  schemas:
    User:
      title: User
      x-stoplight:
        id: e04lplqp2mw1t
      type: object
      description: ''
      properties:
        id:
          type: string
        name:
          type: string
        firstname:
          type: string
      required:
        - name
        - firstname
